# LAURA Digital Agency - Apache Configuration
# Configuraci√≥n optimizada para seguridad, velocidad y Cloudflare
# Version: 3.0 - Production Ready

# ==========================================
# CLOUDFLARE CONFIGURATION
# ==========================================

# Restore original visitor IP from Cloudflare
<IfModule mod_remoteip.c>
    RemoteIPHeader CF-Connecting-IP
    RemoteIPTrustedProxy 173.245.48.0/20
    RemoteIPTrustedProxy 103.21.244.0/22
    RemoteIPTrustedProxy 103.22.200.0/22
    RemoteIPTrustedProxy 103.31.4.0/22
    RemoteIPTrustedProxy 141.101.64.0/18
    RemoteIPTrustedProxy 108.162.192.0/18
    RemoteIPTrustedProxy 190.93.240.0/20
    RemoteIPTrustedProxy 188.114.96.0/20
    RemoteIPTrustedProxy 197.234.240.0/22
    RemoteIPTrustedProxy 198.41.128.0/17
    RemoteIPTrustedProxy 162.158.0.0/15
    RemoteIPTrustedProxy 104.16.0.0/13
    RemoteIPTrustedProxy 104.24.0.0/14
    RemoteIPTrustedProxy 172.64.0.0/13
    RemoteIPTrustedProxy 131.0.72.0/22
</IfModule>

# ==========================================
# SECURITY HEADERS
# ==========================================

<IfModule mod_headers.c>
    # Security Headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set X-Permitted-Cross-Domain-Policies "none"
    
    # Content Security Policy - Optimizado para LAURA
    Header always set Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://www.googletagmanager.com https://www.google-analytics.com https://connect.facebook.net https://static.hotjar.com https://script.hotjar.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; img-src 'self' data: https: blob: *; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; connect-src 'self' https://www.google-analytics.com https://api.hotjar.com https://vc.hotjar.io wss://ws.hotjar.com; frame-src 'self' https://www.youtube.com https://www.google.com https://player.vimeo.com; object-src 'none'; base-uri 'self'; upgrade-insecure-requests"
    
    # Permissions Policy
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(self), payment=(self), usb=(), accelerometer=(), gyroscope=(), magnetometer=()"
    
    # HSTS (HTTP Strict Transport Security)
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    
    # Remove Server Information
    Header unset Server
    Header unset X-Powered-By
    
    # Cross-Origin Policies
    Header always set Cross-Origin-Embedder-Policy "credentialless"
    Header always set Cross-Origin-Opener-Policy "same-origin"
    Header always set Cross-Origin-Resource-Policy "cross-origin"
</IfModule>

# ==========================================
# URL REWRITING & REDIRECTIONS
# ==========================================

RewriteEngine On

# Force HTTPS (only if not behind Cloudflare SSL)
# Commented out as Cloudflare handles SSL termination
# RewriteCond %{HTTPS} off
# RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]

# Force www (choose one - currently forcing WITH www)
RewriteCond %{HTTP_HOST} !^www\. [NC]
RewriteCond %{HTTP_HOST} !^localhost [NC]
RewriteRule ^(.*)$ https://www.%{HTTP_HOST}/$1 [R=301,L]

# Remove trailing slashes from files (but keep for directories)
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} (.+)/$
RewriteRule ^(.+)/$ /$1 [R=301,L]

# Add trailing slash to directories
RewriteCond %{REQUEST_FILENAME} -d
RewriteCond %{REQUEST_URI} !(.+)/$
RewriteRule ^(.+)$ $1/ [R=301,L]

# ==========================================
# ADVANCED SECURITY PROTECTION
# ==========================================

# Block access to sensitive files
<FilesMatch "^\.">
    Require all denied
</FilesMatch>

<FilesMatch "\.(log|sql|ini|conf|env|git|htaccess|htpasswd|json|lock|md|txt|yml|yaml|bak|backup|old|tmp|temp|config)$">
    Require all denied
</FilesMatch>

# Protect specific files
<Files "composer.json">
    Require all denied
</Files>

<Files "package.json">
    Require all denied
</Files>

<Files "readme.md">
    Require all denied
</Files>

# Block directory browsing
Options -Indexes
Options -Includes

# Prevent script execution in uploads directory
# <IfModule mod_php7.c>
#    php_flag engine off
#</IfModule>
#<IfModule mod_php8.c>
#    php_flag engine off
#</IfModule>

# ==========================================
# ANTI-MALWARE & INJECTION PROTECTION
# ==========================================

# Block suspicious query strings
RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
RewriteCond %{QUERY_STRING} (\<|%3C).*iframe.*(\>|%3E) [NC,OR]
RewriteCond %{QUERY_STRING} (\<|%3C).*object.*(\>|%3E) [NC,OR]
RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
RewriteCond %{QUERY_STRING} proc/self/environ [OR]
RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|\%3D) [OR]
RewriteCond %{QUERY_STRING} base64_encode.*\(.*\) [OR]
RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
RewriteCond %{QUERY_STRING} (\<|%3C).*embed.*(\>|%3E) [NC]
RewriteRule .* - [F,L]

# Block suspicious user agents
RewriteCond %{HTTP_USER_AGENT} ^$ [OR]
RewriteCond %{HTTP_USER_AGENT} ^(java|curl|wget) [NC,OR]
RewriteCond %{HTTP_USER_AGENT} (libwww-perl|python|nikto|scan|clshttp|archiver|loader|email|harvest|extract|grab|miner) [NC]
RewriteRule .* - [F,L]

# Block request methods
RewriteCond %{REQUEST_METHOD} ^(TRACE|DELETE|TRACK|DEBUG) [NC]
RewriteRule .* - [F,L]

# ==========================================
# BOT & SPAM PROTECTION
# ==========================================

# Block known bad bots and scrapers
RewriteCond %{HTTP_USER_AGENT} (semrush|ahrefs|mj12bot|dotbot|rogerbot|exabot|facebot|ia_archiver) [NC]
RewriteRule .* - [F,L]

# Rate limiting by IP (basic protection)
RewriteEngine On
RewriteCond %{HTTP:X-Forwarded-For} !^$
RewriteRule .* - [E=CLIENT_IP:%{HTTP:X-Forwarded-For}]
RewriteCond %{HTTP:X-Forwarded-For} ^$
RewriteRule .* - [E=CLIENT_IP:%{REMOTE_ADDR}]

# Block IPs with too many requests (basic implementation)
# This should be complemented with fail2ban or similar tools

# ==========================================
# PERFORMANCE OPTIMIZATION
# ==========================================

# Enable Compression
<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE application/x-font
    AddOutputFilterByType DEFLATE application/x-font-opentype
    AddOutputFilterByType DEFLATE application/x-font-otf
    AddOutputFilterByType DEFLATE application/x-font-truetype
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE font/otf
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/ld+json
    
    # Remove browser bugs (only needed for old browsers)
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent
</IfModule>

# ==========================================
# BROWSER CACHING (Cloudflare Compatible)
# ==========================================

<IfModule mod_expires.c>
    ExpiresActive On
    
    # Images - Long cache as they rarely change
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/avif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    
    # CSS and JavaScript - Medium cache with versioning
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    
    # Web fonts - Long cache
    ExpiresByType font/ttf "access plus 1 year"
    ExpiresByType font/otf "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # Documents and data files - Medium cache
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType application/json "access plus 1 day"
    ExpiresByType application/ld+json "access plus 1 day"
    
    # HTML - Short cache for dynamic content
    ExpiresByType text/html "access plus 1 hour"
    
    # XML feeds
    ExpiresByType application/xml "access plus 1 hour"
    ExpiresByType text/xml "access plus 1 hour"
    ExpiresByType application/rss+xml "access plus 1 hour"
    ExpiresByType application/atom+xml "access plus 1 hour"
    
    # Default fallback
    ExpiresDefault "access plus 1 day"
</IfModule>

<IfModule mod_headers.c>
    # Cache-Control headers (compatible with Cloudflare)
    
    # HTML files - Always revalidate
    <FilesMatch "\.(html|htm|php)$">
        Header set Cache-Control "public, max-age=3600, must-revalidate"
    </FilesMatch>

    # CSS and JavaScript - Cache with versioning
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "public, max-age=2628000, immutable"
    </FilesMatch>

    # Images - Long cache with immutable
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|avif|ico|svg)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # Fonts - Long cache with immutable
    <FilesMatch "\.(woff|woff2|ttf|otf|eot)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
        Header set Access-Control-Allow-Origin "*"
    </FilesMatch>

    # Documents
    <FilesMatch "\.(pdf|doc|docx|xls|xlsx|ppt|pptx)$">
        Header set Cache-Control "public, max-age=2628000"
    </FilesMatch>
</IfModule>

# ==========================================
# HOTLINK PROTECTION
# ==========================================

RewriteCond %{HTTP_REFERER} !^$
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?laura\.lat [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?google\. [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?bing\. [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?facebook\. [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?twitter\. [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?linkedin\. [NC]
RewriteCond %{HTTP_REFERER} !^https?://(www\.)?instagram\. [NC]
RewriteRule \.(jpg|jpeg|png|gif|webp|svg|ico|pdf|mp4|webm|mp3)$ - [F,L]

# ==========================================
# ERROR PAGES & LIMITS
# ==========================================

# Custom error pages
ErrorDocument 400 /error/400.html
ErrorDocument 401 /error/401.html
ErrorDocument 403 /error/403.html
ErrorDocument 404 /error/404.html
ErrorDocument 500 /error/500.html
ErrorDocument 502 /error/502.html
ErrorDocument 503 /error/503.html

# Set default charset
AddDefaultCharset UTF-8

# Remove ETags (Cloudflare handles them better)
FileETag None
Header unset ETag

# Limit file uploads (10MB)
LimitRequestBody 10485760

# ==========================================
# CORS HEADERS (for API endpoints)
# ==========================================

<IfModule mod_headers.c>
    # Handle preflight requests
    <If "%{REQUEST_METHOD} == 'OPTIONS'">
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE"
        Header always set Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since"
        Header always set Access-Control-Max-Age "86400"
    </If>
</IfModule>

# ==========================================
# BLOG SYSTEM SUPPORT
# ==========================================

# Blog routing - Support for blog system
RewriteRule ^blog/?$ /blog.html [L]
RewriteRule ^blog/([^/]+)/?$ /blog.html?category=$1 [L,QSA]
RewriteRule ^blog/([^/]+)/([^/]+)/?$ /blog.html?category=$1&post=$2 [L,QSA]
RewriteRule ^blog/([^/]+)/([^/]+)/?$ /blog-posts/$1/$2.html [L]
RewriteRule ^blog/([^/]+)/?$ /blog.html?category=$1 [L,QSA]

# ==========================================
# ADDITIONAL OPTIMIZATIONS
# ==========================================

# Enable keep-alive connections
<IfModule mod_headers.c>
    Header set Connection keep-alive
</IfModule>

# Optimize .htaccess processing
Options +SymLinksIfOwnerMatch

# Memory and execution limits (adjust as needed)
# php_value memory_limit 256M
# php_value max_execution_time 300
# php_value post_max_size 20M
# php_value upload_max_filesize 20M

# ==========================================
# SERVICE WORKER SUPPORT
# ==========================================

<IfModule mod_headers.c>
    <FilesMatch "sw\.js$">
        Header set Service-Worker-Allowed "/"
        Header set Cache-Control "public, max-age=0, must-revalidate"
    </FilesMatch>
</IfModule>

# ==========================================
# DEVELOPMENT vs PRODUCTION
# ==========================================

# Uncomment for development (disable caching)
# <IfModule mod_headers.c>
#     Header set Cache-Control "no-cache, no-store, must-revalidate"
#     Header set Pragma "no-cache"
#     Header set Expires "0"
# </IfModule>

